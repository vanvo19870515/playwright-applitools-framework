import type { UFGServerSettings, RenderTarget, RenderSettings, StartedRender, GetActualEnvironmentSettings, ActualEnvironment, RenderResult, Environment } from '../types';
import type { HashedResource, ContentfulResource } from '../resources/resource';
import { type Logger } from '@applitools/logger';
export interface UFGRequests {
    startRenders(options: {
        renders: {
            target: RenderTarget;
            settings: RenderSettings;
        }[];
        logger?: Logger;
    }): Promise<StartedRender[]>;
    getRenderResults(options: {
        renders: StartedRender[];
        logger?: Logger;
    }): Promise<RenderResult[]>;
    uploadResource(options: {
        resource: ContentfulResource;
        logger?: Logger;
    }): Promise<void>;
    checkResources(options: {
        resources: {
            hash: HashedResource;
        }[];
        logger?: Logger;
    }): Promise<boolean[]>;
    getActualEnvironments(options: {
        settings: GetActualEnvironmentSettings[];
        logger?: Logger;
    }): Promise<ActualEnvironment[]>;
    getChromeEmulationDevices(options?: {
        logger?: Logger;
    }): Promise<Record<string, any>>;
    getIOSDevices(options?: {
        logger?: Logger;
    }): Promise<Record<string, any>>;
    getAndroidDevices(options?: {
        logger?: Logger;
    }): Promise<Record<string, any>>;
}
export declare function makeUFGRequests({ settings, logger }: {
    settings: UFGServerSettings;
    logger?: Logger;
}): UFGRequests;
export declare function toServerEnvironment(environment: Environment): {
    platform: {
        name: string;
        type: string;
    };
    browser: {
        name: string;
    };
    renderInfo: {
        width: number;
        height: number;
        emulationInfo?: undefined;
        androidDeviceInfo?: undefined;
        iosDeviceInfo?: undefined;
    };
} | {
    platform: {
        name: string;
        type: string;
    };
    browser: {
        name: string;
    };
    renderInfo: {
        emulationInfo: {
            deviceName: "Blackberry PlayBook" | "BlackBerry Z30" | "Galaxy A5" | "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy Note 2" | "Galaxy Note 3" | "Galaxy Note 4" | "Galaxy Note 8" | "Galaxy Note 9" | "Galaxy S3" | "Galaxy S5" | "Galaxy S8" | "Galaxy S8 Plus" | "Galaxy S9" | "Galaxy S9 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S21" | "Galaxy S21 Ultra" | "Galaxy S22" | "Galaxy S22 Ultra" | "Galaxy Tab S7" | "iPad" | "iPad 6th Gen" | "iPad 7th Gen" | "iPad Air 2" | "iPad Mini" | "iPad Pro" | "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone 4" | "iPhone 5/SE" | "iPhone 6/7/8" | "iPhone 6/7/8 Plus" | "iPhone X" | "iPhone XR" | "iPhone XS" | "iPhone XS Max" | "Kindle Fire HDX" | "Laptop with HiDPI screen" | "Laptop with MDPI screen" | "Laptop with touch" | "LG G6" | "LG Optimus L70" | "Microsoft Lumia 550" | "Microsoft Lumia 950" | "Nexus 10" | "Nexus 4" | "Nexus 5" | "Nexus 5X" | "Nexus 6" | "Nexus 6P" | "Nexus 7" | "Nokia Lumia 520" | "Nokia N9" | "OnePlus 7T" | "OnePlus 7T Pro" | "Pixel 2" | "Pixel 2 XL" | "Pixel 3" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Huawei Mate 50 Pro" | "Huawei Matepad 11";
            screenOrientation: "portrait" | "landscape" | undefined;
        };
        width?: undefined;
        height?: undefined;
        androidDeviceInfo?: undefined;
        iosDeviceInfo?: undefined;
    };
} | {
    platform: {
        name: string;
        type: "web" | "native";
    };
    browser: {
        name: string;
    } | undefined;
    renderInfo: {
        androidDeviceInfo: {
            name: "Galaxy Note 10" | "Galaxy Note 10 Plus" | "Galaxy S10" | "Galaxy S10 Plus" | "Galaxy S20" | "Galaxy S21" | "Galaxy S21 Ultra" | "Galaxy S22" | "Galaxy Tab S7" | "Pixel 3 XL" | "Pixel 4" | "Pixel 4 XL" | "Pixel 5" | "Sony Xperia 10 II" | "Pixel 6" | "Galaxy S20 Plus" | "Galaxy S21 Plus" | "Galaxy S22 Plus" | "Galaxy Tab S8" | "Xiaomi Redmi Note 10 JE" | "Xiaomi Redmi Note 11" | "Xiaomi Redmi Note 11 Pro" | "Sony Xperia 1 II" | "Sony Xperia Ace II" | "Huawei P30 Lite";
            version: "latest" | "latest-1" | undefined;
            screenOrientation: "portrait" | "landscape" | undefined;
        };
        width?: undefined;
        height?: undefined;
        emulationInfo?: undefined;
        iosDeviceInfo?: undefined;
    };
} | {
    platform: {
        name: string;
        type: string;
    };
    browser: {
        name: string;
    };
    renderInfo: {
        iosDeviceInfo: {
            name: "iPhone 11" | "iPhone 11 Pro" | "iPhone 11 Pro Max" | "iPhone X" | "iPhone XR" | "iPhone 14 Pro Max" | "iPhone 14" | "iPhone 13 Pro Max" | "iPhone 13 Pro" | "iPhone 13" | "iPhone 12 Pro Max" | "iPhone 12 Pro" | "iPhone 12" | "iPhone 12 mini" | "iPhone Xs" | "iPhone 8" | "iPhone 8 Plus" | "iPhone 7" | "iPhone SE (1st generation)" | "iPad Pro (12.9-inch) (3rd generation)" | "iPad Pro (11-inch) (4th generation)" | "iPad (7th generation)" | "iPad (9th generation)" | "iPad Air (2nd generation)" | "iPad Air (4th generation)";
            version: "latest" | "latest-1" | undefined;
            screenOrientation: "portrait" | "landscape" | undefined;
        };
        width?: undefined;
        height?: undefined;
        emulationInfo?: undefined;
        androidDeviceInfo?: undefined;
    };
} | undefined;
