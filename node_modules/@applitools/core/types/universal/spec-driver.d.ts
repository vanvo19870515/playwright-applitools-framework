import type { Ref, ServerSocket, UniversalSpecDriver } from './types';
import type { SpecType, SpecDriver as BaseSpecDriver, CommonSelector } from '@applitools/driver';
export type Driver = Ref;
export type Context = Ref;
export type Element = Ref;
export type Selector = string | CommonSelector | Ref;
export type UserFunction = Ref;
export type PrimarySpecType = SpecType<Driver, Context, Element, Selector, never, UserFunction>;
export type SpecDriver = BaseSpecDriver<PrimarySpecType>;
type CommandName = keyof UniversalSpecDriver<PrimarySpecType>;
export declare function makeSpec({ socket, spec, }: {
    socket: ServerSocket<PrimarySpecType, any>;
    spec: CommandName[];
}): SpecDriver;
export {};
