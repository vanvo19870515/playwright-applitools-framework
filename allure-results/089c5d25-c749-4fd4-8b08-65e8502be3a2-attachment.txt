Applitools test results: TestResultsSummaryData {
  _summary: {
    results: [ [Object], [Object], [Object] ],
    passed: 3,
    unresolved: 0,
    failed: 0,
    exceptions: 0,
    mismatches: 0,
    missing: 0,
    matches: 6
  },
  _core: {
    concurrency: [Getter/Setter],
    openEyes: [AsyncFunction: openEyes],
    openFunctionalSession: [AsyncFunction: openFunctionalSession],
    openCheckAndClose: [AsyncFunction: openCheckAndClose],
    locate: [AsyncFunction: locate],
    locateText: [AsyncFunction: locateText],
    extractText: [AsyncFunction: extractText],
    closeBatch: [AsyncFunction: closeBatch],
    deleteTest: [AsyncFunction: deleteTest],
    getAccountInfo: [AsyncFunction: getAccountInfo],
    logEvent: [Function: logEvent],
    updateIfScm: [Function: funcWithCache] {
      clearCache: [Function (anonymous)],
      getCachedValues: [Function (anonymous)],
      setCachedValue: [Function (anonymous)]
    },
    openCheckAndCloseEyes: [Function: openCheckAndCloseEyes],
    base: {
      concurrency: [Getter],
      openEyes: [AsyncFunction: openEyes],
      openFunctionalSession: [AsyncFunction: openFunctionalSession],
      openCheckAndClose: [AsyncFunction: openCheckAndClose],
      locate: [AsyncFunction: locate],
      locateText: [AsyncFunction: locateText],
      extractText: [AsyncFunction: extractText],
      closeBatch: [AsyncFunction: closeBatch],
      deleteTest: [AsyncFunction: deleteTest],
      getAccountInfo: [AsyncFunction: getAccountInfo],
      logEvent: [Function: logEvent],
      updateIfScm: [Function],
      openCheckAndCloseEyes: [Function: openCheckAndCloseEyes]
    },
    getViewportSize: [AsyncFunction: getViewportSize],
    setViewportSize: [AsyncFunction: setViewportSize],
    getNMLClient: [AsyncFunction: getNMLClient],
    clearNMLClientCache: [AsyncFunction: clearNMLClientCache],
    getECClient: [Function: funcWithCache] {
      clearCache: [Function (anonymous)],
      getCachedValues: [Function (anonymous)],
      setCachedValue: [Function (anonymous)]
    },
    makeManager: [AsyncFunction: makeManager],
    takeSnapshots: [AsyncFunction: takeSnapshots]
  }
}
