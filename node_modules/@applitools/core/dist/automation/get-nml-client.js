"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeGetNMLClient = void 0;
const nml_client_1 = require("@applitools/nml-client");
const clients = new Map();
function makeGetNMLClient({ client, logger: mainLogger }) {
    return {
        getNMLClient,
        clearNMLClientCache,
    };
    async function getNMLClient({ driver, settings, logger, }) {
        if (client)
            return client;
        logger = logger.extend(mainLogger);
        const { sessionId } = await driver.getDriverInfo();
        const cacheKey = sessionId !== null && sessionId !== void 0 ? sessionId : driver.guid;
        const clientFromCache = clients.get(cacheKey);
        if (clientFromCache) {
            return clientFromCache;
        }
        else {
            const brokerUrl = await driver.extractBrokerUrl();
            if (!brokerUrl)
                throw new Error('Unable to extract broker url from the device');
            const nmlClient = (0, nml_client_1.makeNMLClient)({ settings: { brokerUrl, ...settings }, logger });
            clients.set(cacheKey, nmlClient);
            return nmlClient;
        }
    }
    async function clearNMLClientCache(driver) {
        const { sessionId } = await driver.getDriverInfo();
        const cacheKey = sessionId !== null && sessionId !== void 0 ? sessionId : driver.guid;
        clients.delete(cacheKey);
    }
}
exports.makeGetNMLClient = makeGetNMLClient;
