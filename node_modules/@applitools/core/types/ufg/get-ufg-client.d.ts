import { type Logger } from '@applitools/logger';
import { type AsyncCache, type UFGClient, type UFGClientSettings } from '@applitools/ufg-client';
type Options = {
    client?: UFGClient;
    fetchConcurrency?: number;
    logger: Logger;
    asyncCache?: AsyncCache;
    offlineLocationPath?: string;
};
export declare function makeGetUFGClient({ client, fetchConcurrency, offlineLocationPath, logger: mainLogger, asyncCache, }: Options): (({ settings, logger }: {
    settings: UFGClientSettings;
    logger?: Logger | undefined;
}) => Promise<UFGClient>) & {
    getCachedValues(): Promise<UFGClient>[];
    setCachedValue(key: any, value: Promise<UFGClient>): void;
    clearCache(): void;
};
export {};
